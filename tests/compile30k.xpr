func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;

func main();
  var a, b: TIntArray;
  var n: Int64 = 10 000 000;
  var dot: Int64 = 0;
 
  a.SetLen(n);
  b.SetLen(n);
  
  n := a.len();
  var all := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    a[i] := i % 1000;
    b[i] := (i * 7) % 1000;
  end
  
  var before := GetTickCount(); 
  for(var i: Int64 = 0; i < n; i := i + 1) do
    dot := dot + a[i] * b[i];
  end

  var after := GetTickCount();
  
  print 'Dot product used: '+(after - before).ToStr()+' ms';
  print 'Full test used:   '+(after - all).ToStr()+' ms';
  print 'Result = '+ dot.ToStr();
end;