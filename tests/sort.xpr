(*
  16th august update:
  
  Lape: 3300ms without range checks. 
  FPC : 160ms
  Expr: 1250ms
*)

func main();
  var arr: array of Int64 //imported decl
  arr.SetLen(1000000);
  
  var n: Int64 = arr.High() + 1;

  for(var i: Int64=0; i<n; i+=1)
    arr[i] := RandInt(0, n)
  
  var before := GetTickCount()
  
  // sort
  var gap: Int64 = 0
  while(gap <= (n-1) div 3)
    gap := gap * 3 + 1
  
  while(gap >= 1) do 
    for(var i: Int64 = gap; i < n; i+=1) do
      var j:Int64 = i
      
      while(j >= gap and arr[j] < arr[j-gap]) do
        var tmp := arr[j]
        arr[j] := arr[j-gap]
        j := j - gap
        arr[j] := tmp
      end
    end
    gap := gap / 3;
  end
  
  var after := GetTickCount()
  print after - before
 
  
  for(i:=0; i<n; i:=i+50000)
    print arr[i];
end;

main();

  
    
    
    
    
