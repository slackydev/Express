(*
  folding_test.xpr
  
  This script is designed to test the constant folding and propagation
  optimization pass in the Express compiler.
*)

func TestFunc(val: Int64): Int64
  return val * 2
end

func main()
  var a := 10 * 5 + 2
  print a // Expected: 52


  var c1 := 2 * 5
  var c2 := c1 + 20
  print c2 // Expected: 30


  // --- Test 3: Propagation into a loop ---
  // `step` should be folded to the constant `2`.
  // The loop should then use this constant value.
  var step := 1 + 1
  var total := 0
  for (var i := 0; i < 5; i := i + step) do
    total += 1
  end
  print total // Expected: 3 (for i = 0, 2, 4)


  // --- Test 4: "Kill" condition ---
  // The value of `k` is initially folded to 100.
  // This should be propagated to the first `print` statement.
  // Then, `k` is reassigned. The optimizer must NOT propagate the
  // old constant value of 100 to the second `print` statement.
  var k := 10 * 10
  print k // Expected: 100 (uses the propagated constant)

  k := 50 // The constant value of k is "killed" here.

  print k // Expected: 50 (must read the new value from the variable)


  // --- Test 5: Function call as a barrier ---
  // The compiler should fold `pre_call` to 25.
  // The function call to `TestFunc` must act as a barrier. The optimizer
  // cannot know what the function does, so it cannot fold the call.
  // It should then fold `post_call` to 30.
  var pre_call := 5 * 5
  var result := TestFunc(pre_call)
  var post_call := 6 * 5
  print result    // Expected: 50 (25 * 2)
  print post_call // Expected: 30


  // --- Test 6: Folding inside a conditional block ---
  // The folding should work correctly inside an 'if' statement.
  var check := 1
  if (check = 1) then
    var inside := 40 + 2
    print inside // Expected: 42
  end


  // --- Test 7: Comparison Folding ---
  // The results of constant comparisons should be folded to booleans.
  var is_equal := (100 = 10 * 10)
  var is_less := (5 < 3)

  if (is_equal) then
    print 1 // Expected: 1 (for true)
  end

  if (is_less) then
    // This block should be optimized away entirely in a more advanced compiler,
    // but for now, we just expect the condition to be false.
    print 999
  end
 
end

main();